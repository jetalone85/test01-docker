version: '3'
services:

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - './data/redis:/data'

  postgres-superset:
    image: postgres:latest
    restart: always
    container_name: postgres-superset
    environment:
      POSTGRES_DB: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_USER: superset
    volumes:
      - './data/postgres-superset:/var/lib/postgresql/data'

  superset:
    image: amancevice/superset:latest
    container_name: superset
    restart: always
    depends_on:
      - postgres-superset
      - redis
    ports:
      - "8088:8088"
    volumes:
      - './etc/superset/superset_config.py:/etc/superset/superset_config.py'

  zookeeper:
    image: zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - './data/zoo/data:/data'
      - './data/zoo/datalog:/datalog'

  nifi:
    image: xemuliam/nifi
    ports:
      - "9090:8080"
      - "8902:8902"
    container_name: nifi
    environment:
      IS_CLUSTER_NODE: 1
      ZK_NODES_LIST: 'zookeeper'
    volumes:
      - './etc/nifi/conf:/opt/nifi/conf'
      - './etc/nifi/lib:/opt/nifi/lib'

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
        KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
        KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
        KAFKA_BROKER_ID: 1
        KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - './data/kafka/data:/var/lib/kafka/data'
    depends_on:
      - zookeeper

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "18083:8083"
      - "18086:8086"
      - "18090:8090"
    env_file:
      - './etc/influxdb/env.influxdb'
    volumes:
      - './data/influxdb/data:/var/lib/influxdb'

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    links:
      - influxdb
    volumes:
      - './etc/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - './etc/grafana/env.grafana'
    links:
      - influxdb

